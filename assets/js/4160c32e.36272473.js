"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[2583],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>y});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var m=r.createContext({}),p=function(e){var t=r.useContext(m),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=p(e.components);return r.createElement(m.Provider,{value:t},e.children)},s="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,m=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),s=p(n),d=i,y=s["".concat(m,".").concat(d)]||s[d]||c[d]||a;return n?r.createElement(y,o(o({ref:t},u),{},{components:n})):r.createElement(y,o({ref:t},u))}));function y(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=d;var l={};for(var m in t)hasOwnProperty.call(t,m)&&(l[m]=t[m]);l.originalType=e,l[s]="string"==typeof e?e:i,o[1]=l;for(var p=2;p<a;p++)o[p]=n[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},1452:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>m,contentTitle:()=>o,default:()=>c,frontMatter:()=>a,metadata:()=>l,toc:()=>p});var r=n(7462),i=(n(7294),n(3905));const a={},o="CommunityMember",l={unversionedId:"api_reference/types/communitymember",id:"api_reference/types/communitymember",title:"CommunityMember",description:"Class swibots.api.community.models.CommunityMember",source:"@site/docs/api_reference/types/communitymember.md",sourceDirName:"api_reference/types",slug:"/api_reference/types/communitymember",permalink:"/Switch-Bots-Python-Library/docs/api_reference/types/communitymember",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Community",permalink:"/Switch-Bots-Python-Library/docs/api_reference/types/community"},next:{title:"EmbedInlineField",permalink:"/Switch-Bots-Python-Library/docs/api_reference/types/embed_inline_field"}},m={},p=[{value:"Properties",id:"properties",level:2}],u={toc:p},s="wrapper";function c(e){let{components:t,...n}=e;return(0,i.kt)(s,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"communitymember"},"CommunityMember"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Class swibots.api.community.models.CommunityMember")),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"CommunityMember")," class contains the info of the user linked with the community."),(0,i.kt)("h2",{id:"properties"},"Properties"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"id")," (",(0,i.kt)("inlineCode",{parentName:"li"},"int"),"): ID"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"admin")," (",(0,i.kt)("inlineCode",{parentName:"li"},"bool"),"): Is user admin."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"username")," (",(0,i.kt)("inlineCode",{parentName:"li"},"str"),"): username of user."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"user_id")," (int): User Id of user."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"community_id")," (str): The community id."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"user")," (",(0,i.kt)("a",{parentName:"li",href:"/Switch-Bots-Python-Library/docs/api_reference/types/user"},"User"),"): The User Info."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"xp")," (int): The xp of the user."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"xp_spend")," (int): The xp spend by the user."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"enable_notification")," (",(0,i.kt)("inlineCode",{parentName:"li"},"bool"),"): is User's notification are enabled."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"role_info")," (",(0,i.kt)("inlineCode",{parentName:"li"},"dict"),"): the role info of user."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"mute_period")," (",(0,i.kt)("inlineCode",{parentName:"li"},"str"),"): the mute period."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"mute_notification")," (",(0,i.kt)("inlineCode",{parentName:"li"},"bool"),"):"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"mute_groups"),": (",(0,i.kt)("inlineCode",{parentName:"li"},"List[str]"),"): the muted groups."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"mute_channels")," (",(0,i.kt)("inlineCode",{parentName:"li"},"List[str]"),"): the muted channels.")))}c.isMDXComponent=!0}}]);