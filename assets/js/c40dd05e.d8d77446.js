"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[5914],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>f});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function d(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=r.createContext({}),s=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=s(e.components);return r.createElement(l.Provider,{value:t},e.children)},m="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,l=e.parentName,p=d(e,["components","mdxType","originalType","parentName"]),m=s(n),u=i,f=m["".concat(l,".").concat(u)]||m[u]||c[u]||a;return n?r.createElement(f,o(o({ref:t},p),{},{components:n})):r.createElement(f,o({ref:t},p))}));function f(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=u;var d={};for(var l in t)hasOwnProperty.call(t,l)&&(d[l]=t[l]);d.originalType=e,d[m]="string"==typeof e?e:i,o[1]=d;for(var s=2;s<a;s++)o[s]=n[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},9379:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>c,frontMatter:()=>a,metadata:()=>d,toc:()=>s});var r=n(7462),i=(n(7294),n(3905));const a={},o="EmbeddedMedia",d={unversionedId:"api_reference/types/embedded_media",id:"api_reference/types/embedded_media",title:"EmbeddedMedia",description:"The EmbeddedMedia class is used to send embedded media in messages.",source:"@site/docs/api_reference/types/embedded_media.md",sourceDirName:"api_reference/types",slug:"/api_reference/types/embedded_media",permalink:"/Switch-Bots-Python-Library/docs/api_reference/types/embedded_media",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"EmbedInlineField",permalink:"/Switch-Bots-Python-Library/docs/api_reference/types/embed_inline_field"},next:{title:"GameInfo",permalink:"/Switch-Bots-Python-Library/docs/api_reference/types/gameinfo"}},l={},s=[{value:"Parameters",id:"parameters",level:2},{value:"Usage",id:"usage",level:2}],p={toc:s},m="wrapper";function c(e){let{components:t,...n}=e;return(0,i.kt)(m,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"embeddedmedia"},"EmbeddedMedia"),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"EmbeddedMedia")," class is used to send embedded media in messages."),(0,i.kt)("h2",{id:"parameters"},"Parameters"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"thumbnail")," (str): The media upload request or cover Url in updates."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"title")," ",(0,i.kt)("inlineCode",{parentName:"li"},"(str)"),": title of message."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"description")," (",(0,i.kt)("inlineCode",{parentName:"li"},"str"),"): description of message."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"header_name")," (",(0,i.kt)("inlineCode",{parentName:"li"},"str"),"): header name."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"header_icon")," (",(0,i.kt)("inlineCode",{parentName:"li"},"str"),"): header icon (URL)"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"footer_title")," (",(0,i.kt)("inlineCode",{parentName:"li"},"str"),"): footer title."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"footer_icon")," (",(0,i.kt)("inlineCode",{parentName:"li"},"str"),"): footer icon (URL)."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"inline_fields")," (List",(0,i.kt)("a",{parentName:"li",href:"/Switch-Bots-Python-Library/docs/api_reference/types/embed_inline_field"},"List[EmbedInlineField]"),"): The inline fields.")),(0,i.kt)("h2",{id:"usage"},"Usage"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},'from swibots import EmbeddedMedia, EmbedInlineField, MediaUploadRequest\n\nembedded = EmbeddedMedia(\n    thumbnail=MediaUploadRequest("image.png"),\n    title="Embedded Message",\n    description="This is description",\n    header_name="header",\n    header_icon="https://icons8.com/icon/6nsw3h9gk8M8/bot",\n    footer_title="footer",\n    footer_icon="https://icons8.com/icon/6nsw3h9gk8M8/bot",\n    inline_fields=[[\n        EmbedInlineField("", "Value", "Title")\n    ]]\n)\nawait message.respond("Embedded Message", media=embedded)\n')))}c.isMDXComponent=!0}}]);