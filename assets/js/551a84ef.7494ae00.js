"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[1695],{3905:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>d});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),c=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},l=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},y=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,l=p(e,["components","mdxType","originalType","parentName"]),u=c(n),y=r,d=u["".concat(s,".").concat(y)]||u[y]||m[y]||o;return n?a.createElement(d,i(i({ref:t},l),{},{components:n})):a.createElement(d,i({ref:t},l))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=y;var p={};for(var s in t)hasOwnProperty.call(t,s)&&(p[s]=t[s]);p.originalType=e,p[u]="string"==typeof e?e:r,i[1]=p;for(var c=2;c<o;c++)i[c]=n[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}y.displayName="MDXCreateElement"},5218:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>p,toc:()=>c});var a=n(7462),r=(n(7294),n(3905));const o={sidebar_position:2},i="Calling the API methods",p={unversionedId:"basic-concepts/calling-api",id:"basic-concepts/calling-api",title:"Calling the API methods",description:"After your project is set up you can start creating your app",source:"@site/docs/basic-concepts/calling-api.md",sourceDirName:"basic-concepts",slug:"/basic-concepts/calling-api",permalink:"/Switch-Bots-Python-Library/docs/basic-concepts/calling-api",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Project setup",permalink:"/Switch-Bots-Python-Library/docs/basic-concepts/project-setup"},next:{title:"Handling events",permalink:"/Switch-Bots-Python-Library/docs/basic-concepts/events"}},s={},c=[{value:"Basic usage",id:"basic-usage",level:2},{value:"Step by step",id:"step-by-step",level:2},{value:"Context Manager",id:"context-manager",level:2},{value:"Using asyncio.run()",id:"using-asynciorun",level:2}],l={toc:c},u="wrapper";function m(e){let{components:t,...n}=e;return(0,r.kt)(u,(0,a.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"calling-the-api-methods"},"Calling the API methods"),(0,r.kt)("p",null,"After your ",(0,r.kt)("a",{parentName:"p",href:"./project-setup"},"project is set up")," you can start creating your app\nand calling the API methods"),(0,r.kt)("h2",{id:"basic-usage"},"Basic usage"),(0,r.kt)("p",null,"Making API calls with SwiBots is very simple. Here\u2019s a basic example we are going to examine step by step:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'from swibots import BotApp\n\napp = BotApp("TOKEN")\n\nasync def main():\n    async with app:\n        me = await app.get_me()\n        print(me)\n\napp.run(main())\n')),(0,r.kt)("h2",{id:"step-by-step"},"Step by step"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Import the BotApp from swibots, you will import all your classes from this package")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"from swibots import BotApp\n")),(0,r.kt)("ol",{start:2},(0,r.kt)("li",{parentName:"ol"},"Instantiate the class with your TOKEN")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'app = BotApp("TOKEN")\n')),(0,r.kt)("ol",{start:3},(0,r.kt)("li",{parentName:"ol"},"Async methods must be invoked within an async context. Here we define an async function and put our code inside. Also notice the ",(0,r.kt)("inlineCode",{parentName:"li"},"await")," keyword in front of the method call; this is required for all asynchronous methods.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"async def main():\n    async with app:\n        me = await app.get_me()\n        print(me)\n")),(0,r.kt)("ol",{start:4},(0,r.kt)("li",{parentName:"ol"},"Finally, we tell Python to schedule our main() async function by using BotApp run() method.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"app.run(main())\n")),(0,r.kt)("h2",{id:"context-manager"},"Context Manager"),(0,r.kt)("p",null,"The async with statement starts a context manager, which is used as a shortcut for starting, executing and stopping the App, asynchronously. It does so by automatically calling ",(0,r.kt)("inlineCode",{parentName:"p"},"start()")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"stop()")," in a more convenient way which also gracefully stops the app, even in case of unhandled exceptions in your code."),(0,r.kt)("p",null,"Below there\u2019s the same example as above, but without the use of the context manager:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'from swibots import BotApp\n\napp = BotApp("TOKEN")\n\n\nasync def main():\n    await app.start()\n    me = await app.get_me()\n    print(me)\n    await app.stop()\n\n\napp.run(main())\n')),(0,r.kt)("h2",{id:"using-asynciorun"},"Using asyncio.run()"),(0,r.kt)("p",null,"Alternatively to the run() method, you can use Python\u2019s asyncio.run() to execute the main function, with one little caveat: the App instance (and possibly other asyncio resources you are going to use) must be instantiated inside the main function."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'import asyncio\nfrom swibots import BotApp\n\nasync def main():\n    app = BotApp("TOKEN")\n    async with app:\n        me = await app.get_me()\n        print(me)\n\nasyncio.run(main())\n')))}m.isMDXComponent=!0}}]);