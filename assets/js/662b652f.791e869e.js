"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[9096],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>h});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function d(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var i=r.createContext({}),s=function(e){var n=r.useContext(i),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},c=function(e){var n=s(e.components);return r.createElement(i.Provider,{value:n},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},u=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,c=d(e,["components","mdxType","originalType","parentName"]),p=s(t),u=a,h=p["".concat(i,".").concat(u)]||p[u]||m[u]||o;return t?r.createElement(h,l(l({ref:n},c),{},{components:t})):r.createElement(h,l({ref:n},c))}));function h(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,l=new Array(o);l[0]=u;var d={};for(var i in n)hasOwnProperty.call(n,i)&&(d[i]=n[i]);d.originalType=e,d[p]="string"==typeof e?e:a,l[1]=d;for(var s=2;s<o;s++)l[s]=t[s];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},6874:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>l,default:()=>m,frontMatter:()=>o,metadata:()=>d,toc:()=>s});var r=t(7462),a=(t(7294),t(3905));const o={},l="add_handler",d={unversionedId:"api_reference/methods/add_handler",id:"api_reference/methods/add_handler",title:"add_handler",description:"Add a handler to the bot.",source:"@site/docs/api_reference/methods/add_handler.md",sourceDirName:"api_reference/methods",slug:"/api_reference/methods/add_handler",permalink:"/Switch-Bots-Python-Library/docs/api_reference/methods/add_handler",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Methods",permalink:"/Switch-Bots-Python-Library/docs/category/methods"},next:{title:"answer_inline_query",permalink:"/Switch-Bots-Python-Library/docs/api_reference/methods/answer_inline_query"}},i={},s=[{value:"Signature",id:"signature",level:2},{value:"Parameters",id:"parameters",level:2},{value:"Example",id:"example",level:2}],c={toc:s},p="wrapper";function m(e){let{components:n,...t}=e;return(0,a.kt)(p,(0,r.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"add_handler"},"add_handler"),(0,a.kt)("p",null,"Add a handler to the bot."),(0,a.kt)("h2",{id:"signature"},"Signature"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"def add_handler(self, handler: BaseHandler | List[BaseHandler]) -> BotApp")),(0,a.kt)("h2",{id:"parameters"},"Parameters"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"handler")," (",(0,a.kt)("inlineCode",{parentName:"li"},"BaseHandler | List[BaseHandler]"),"): The handler to add to the bot, or a list of handlers to add to the bot (see ",(0,a.kt)("a",{parentName:"li",href:"../../fundamentals/handlers"},"Hanlders")," for more information on handlers)")),(0,a.kt)("h2",{id:"example"},"Example"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'\n\nfrom swibots import BotApp, BotContext, CommandEvent, MessageEvent, CallbackQueryEvent, filters, InlineKeyboardButton, InlineMarkup, BotCommandInfo\n\nfrom swibots.bots.handlers import (\n    MessageHandler,\n    UnknownCommandHandler,\n    CallbackQueryHandler,\n    CommandHandler,\n)\n\n\nasync def echo(ctx: BotContext[CommandEvent]):\n    m = await ctx.bot.prepare_response_message(ctx.event.message)\n    text = ctx.event.params or "No args"\n    m.message = f"Your message: {text}"\n    await ctx.bot.send_message(m)\n\napp = BotApp()\n\n# register your handlers here\n\necho_handler = CommandHandler(\n    command="echo",\n    callback=echo,\n)\n\napp.add_handler(\n   echo_handler\n)\n\napp.run()\n\n')))}m.isMDXComponent=!0}}]);