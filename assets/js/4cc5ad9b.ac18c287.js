"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[3774],{3905:(e,t,r)=>{r.d(t,{Zo:()=>m,kt:()=>h});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},i=Object.keys(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var p=a.createContext({}),l=function(e){var t=a.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},m=function(e){var t=l(e.components);return a.createElement(p.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,i=e.originalType,p=e.parentName,m=o(e,["components","mdxType","originalType","parentName"]),c=l(r),u=n,h=c["".concat(p,".").concat(u)]||c[u]||d[u]||i;return r?a.createElement(h,s(s({ref:t},m),{},{components:r})):a.createElement(h,s({ref:t},m))}));function h(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=r.length,s=new Array(i);s[0]=u;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o[c]="string"==typeof e?e:n,s[1]=o;for(var l=2;l<i;l++)s[l]=r[l];return a.createElement.apply(null,s)}return a.createElement.apply(null,r)}u.displayName="MDXCreateElement"},2562:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>s,default:()=>d,frontMatter:()=>i,metadata:()=>o,toc:()=>l});var a=r(7462),n=(r(7294),r(3905));const i={},s="reply_message_text",o={unversionedId:"api_reference/methods/reply_message_text",id:"api_reference/methods/reply_message_text",title:"reply_message_text",description:"Replies to a message with a text.",source:"@site/docs/api_reference/methods/reply_message_text.md",sourceDirName:"api_reference/methods",slug:"/api_reference/methods/reply_message_text",permalink:"/Switch-Bots-Python-Library/docs/api_reference/methods/reply_message_text",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"reply_message",permalink:"/Switch-Bots-Python-Library/docs/api_reference/methods/reply_message"},next:{title:"run",permalink:"/Switch-Bots-Python-Library/docs/api_reference/methods/run"}},p={},l=[{value:"Signature",id:"signature",level:2},{value:"Parameters",id:"parameters",level:2}],m={toc:l},c="wrapper";function d(e){let{components:t,...r}=e;return(0,n.kt)(c,(0,a.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"reply_message_text"},"reply_message_text"),(0,n.kt)("p",null,"Replies to a message with a text."),(0,n.kt)("h2",{id:"signature"},"Signature"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"async def reply_message_text(message: int | Message, text: str, inline_markup: InlineMarkup = None, media: MediaUploadRequest | EmbeddedMedia = None) -> Message:")),(0,n.kt)("h2",{id:"parameters"},"Parameters"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"message")," (int | ",(0,n.kt)("a",{parentName:"li",href:"../types/message"},"Message"),"): The ID of the message to reply to or the message itself"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"text")," (str): The text of the message"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"inline_markup")," (",(0,n.kt)("a",{parentName:"li",href:"../types/inline_markup"},"InlineMarkup"),"): The inline markup of the message"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"embed_message")," ",(0,n.kt)("a",{parentName:"li",href:"/Switch-Bots-Python-Library/docs/api_reference/types/embedded_media"},"EmbeddedMedia"),"): The media to send with the message"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"cached_media")," (",(0,n.kt)("a",{parentName:"li",href:"../types/media"},"CachedMedia"),"): The cached media to send with the message (media that has already been uploaded to the server)")),(0,n.kt)("admonition",{type:"tip"},(0,n.kt)("p",{parentName:"admonition"},"This method does the same thing as ",(0,n.kt)("a",{parentName:"p",href:"../methods/reply_message"},"reply_message"),", but it only sets the text of the message.")),(0,n.kt)("admonition",{type:"tip"},(0,n.kt)("p",{parentName:"admonition"},"This method does the same thing as the ",(0,n.kt)("inlineCode",{parentName:"p"},"reply_text")," method of the ",(0,n.kt)("a",{parentName:"p",href:"../types/message"},"Message")," class.")))}d.isMDXComponent=!0}}]);