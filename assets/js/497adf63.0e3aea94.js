"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[649],{3905:(e,t,r)=>{r.d(t,{Zo:()=>d,kt:()=>k});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},l=Object.keys(e);for(a=0;a<l.length;a++)r=l[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)r=l[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var s=a.createContext({}),p=function(e){var t=a.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},d=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},u="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},h=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,l=e.originalType,s=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),u=p(r),h=n,k=u["".concat(s,".").concat(h)]||u[h]||c[h]||l;return r?a.createElement(k,o(o({ref:t},d),{},{components:r})):a.createElement(k,o({ref:t},d))}));function k(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=r.length,o=new Array(l);o[0]=h;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[u]="string"==typeof e?e:n,o[1]=i;for(var p=2;p<l;p++)o[p]=r[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,r)}h.displayName="MDXCreateElement"},2410:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>c,frontMatter:()=>l,metadata:()=>i,toc:()=>p});var a=r(7462),n=(r(7294),r(3905));const l={},o="Progress Callbacks",i={unversionedId:"api_reference/functions",id:"api_reference/functions",title:"Progress Callbacks",description:"Swibots have a number of built-in functions that can be used in the code of your Swibot. These functions are available in the swibot module.",source:"@site/docs/api_reference/functions.md",sourceDirName:"api_reference",slug:"/api_reference/functions",permalink:"/Switch-Bots-Python-Library/docs/api_reference/functions",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"User",permalink:"/Switch-Bots-Python-Library/docs/api_reference/types/user"},next:{title:"Deploy",permalink:"/Switch-Bots-Python-Library/docs/category/deploy"}},s={},p=[{value:"DownloadProgressCallback",id:"downloadprogresscallback",level:2},{value:"Signature",id:"signature",level:3},{value:"Parameters",id:"parameters",level:3},{value:"DownloadProgress",id:"downloadprogress",level:2},{value:"Properties",id:"properties",level:3},{value:"UploadProgressCallback",id:"uploadprogresscallback",level:2},{value:"Signature",id:"signature-1",level:3},{value:"Parameters",id:"parameters-1",level:3},{value:"UploadProgress",id:"uploadprogress",level:2},{value:"Properties",id:"properties-1",level:3},{value:"IOClient",id:"ioclient",level:2}],d={toc:p},u="wrapper";function c(e){let{components:t,...r}=e;return(0,n.kt)(u,(0,a.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"progress-callbacks"},"Progress Callbacks"),(0,n.kt)("p",null,"Swibots have a number of built-in functions that can be used in the code of your Swibot. These functions are available in the ",(0,n.kt)("inlineCode",{parentName:"p"},"swibot")," module."),(0,n.kt)("h2",{id:"downloadprogresscallback"},"DownloadProgressCallback"),(0,n.kt)("p",null,"A callback function that is called when the download progress changes."),(0,n.kt)("h3",{id:"signature"},"Signature"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"DownloadProgressCallback = Callable[[DownloadProgress], Coroutine[Any, Any, None]]")),(0,n.kt)("h3",{id:"parameters"},"Parameters"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"progress")," (",(0,n.kt)("a",{parentName:"li",href:"#downloadprogress"},"DownloadProgress"),"): The download progress")),(0,n.kt)("h2",{id:"downloadprogress"},"DownloadProgress"),(0,n.kt)("p",null,"The download progress."),(0,n.kt)("h3",{id:"properties"},"Properties"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"downloaded")," (int): The number of bytes that have been downloaded"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"total")," (int): The total number of bytes to download"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"url")," (str): The URL of the file being downloaded"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"client")," (",(0,n.kt)("a",{parentName:"li",href:"#ioclient"},"IOClient"),"): The client that is downloading the file"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"file_name")," (str): The file name of the file being downloaded"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"stared")," (bool): Whether the download has started")),(0,n.kt)("h2",{id:"uploadprogresscallback"},"UploadProgressCallback"),(0,n.kt)("p",null,"A callback function that is called when the upload progress changes."),(0,n.kt)("h3",{id:"signature-1"},"Signature"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"UploadProgressCallback = Callable[[UploadProgress], Coroutine[Any, Any, None]]")),(0,n.kt)("h3",{id:"parameters-1"},"Parameters"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"progress")," (",(0,n.kt)("a",{parentName:"li",href:"#uploadprogress"},"UploadProgress"),"): The upload progress")),(0,n.kt)("h2",{id:"uploadprogress"},"UploadProgress"),(0,n.kt)("p",null,"The upload progress."),(0,n.kt)("h3",{id:"properties-1"},"Properties"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"current")," (int): The current chunk size (in bytes) being uploaded"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"readed")," (int): The number of bytes that have been uploaded"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"url")," (str): The URL of the file being uploaded"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"client")," (",(0,n.kt)("a",{parentName:"li",href:"#ioclient"},"IOClient"),"): The client that is uploading the file"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"file_name")," (str): The file name of the file being uploaded"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"started")," (bool): Whether the upload has started"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"callback")," (",(0,n.kt)("a",{parentName:"li",href:"#uploadprogresscallback"},"UploadProgressCallback"),"): The callback function that is called when the upload progress changes"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"callback_args")," (tuple): Additional arguments to pass to the ",(0,n.kt)("inlineCode",{parentName:"li"},"callback")," callback function")),(0,n.kt)("h2",{id:"ioclient"},"IOClient"),(0,n.kt)("p",null,"The client that is used to download files. This is a class with just one metod ",(0,n.kt)("inlineCode",{parentName:"p"},"cancel()"),", which can be used to cancel the download / upload."),(0,n.kt)("p",null,"It is used as a property of the ",(0,n.kt)("a",{parentName:"p",href:"#downloadprogress"},"DownloadProgress")," and ",(0,n.kt)("a",{parentName:"p",href:"#uploadprogress"},"UploadProgress")," objects."))}c.isMDXComponent=!0}}]);